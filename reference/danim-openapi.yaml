openapi: 3.0.0
info:
  title: Danim API
  version: '1.0'
  description: |-
    From the generation of personalized videos for your users and clients to the large-scale marketing campaign, Danim has been designed to open the door to your creativity.
    The Danim API is an interface for reading and writing data from and to client online accounts, organizations that holds them, videos having been or being generated, and so on.
  contact:
    name: Danim Support
    url: 'https://danim.com'
    email: support@danim.com
  termsOfService: 'https://danim.com/cguv'
servers:
  - url: 'https://api.danim.com'
paths:
  /upload/me:
    post:
      summary: Upload a file
      operationId: post-upload-me
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - description: success
                    properties:
                      success:
                        type: boolean
                      data:
                        type: object
                        required:
                          - file
                        properties:
                          file:
                            type: object
                            properties:
                              id:
                                type: string
                                description: ID of the file
                              created_at:
                                type: string
                                description: Date of creation
                              path:
                                type: string
                                description: Relative cloud path (found in the URL)
                              original_name:
                                type: string
                                description: Client file name on upload
                              mime_type:
                                type: string
                                description: MIME type of the file
                              url:
                                type: string
                                description: Complete cloud URL of the file
                              size:
                                type: integer
                                description: Size of the file (B)
                            required:
                              - id
                              - created_at
                              - path
                              - original_name
                              - mime_type
                              - url
                              - size
                    required:
                      - success
                      - data
                  - description: error
                    properties:
                      success:
                        type: boolean
                      message:
                        type: string
                      meta:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            type: string
                            enum:
                              - EmptyFile
                              - FileExtensionCannotBeGuessed
                              - FileExtensionIsNotAccepted
                              - FileIsTooLarge
                            x-enum-description:
                              EmptyFile: The file has no content (size to 0)
                              FileExtensionCannotBeGuessed: 'File has been downloaded given its URL, but no extension could have been deduced'
                              FileExtensionIsNotAccepted: 'File extension is not authorized (in general, on the platform)'
                              FileIsTooLarge: File size is too high
                    required:
                      - success
                      - message
                      - meta
                type: object
              examples:
                '1:success':
                  value:
                    success: true
                    data:
                      file:
                        id: d3f9c21c-9cb8-4f90-80b5-b87e1c951db3
                        created_at: '2020-09-05T15:40:40+00:00'
                        original_name: my-pic.jpeg
                        mime_type: image/jpeg
                        size: 412941
                        url: 'https://s3.eu-west-3.amazonaws.com/com.danim.prod/app/app/file-store/68147b15-d6ee-4a2c-bfa0-57242c4d2d97.jpeg'
                        path: app/app/file-store/68147b15-d6ee-4a2c-bfa0-57242c4d2d97.jpeg
                '1:error':
                  value:
                    success: false
                    message: File extension is not authorized
                    meta:
                      type: FileExtensionIsNotAccepted
      description: 'This endpoint lets you upload files to our platform, that you may reuse elsewhere using their IDs (e.g. in the `POST` body of another API call).'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  description: The file content
                  format: binary
              required:
                - file
            examples:
              '1:File sending':
                value:
                  file: BINARY
        description: ''
      tags:
        - upload
  /write/video/create:
    post:
      summary: Create a video
      operationId: post-write-video-create
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - description: success
                    properties:
                      success:
                        type: boolean
                      data:
                        type: object
                        required:
                          - id
                          - short_id
                          - name
                        properties:
                          id:
                            type: string
                            description: Video ID
                          short_id:
                            type: string
                            description: 'Video short ID (i.e. which appears publicly in several URLs, such as the player’s one)'
                          name:
                            type: string
                            description: Video name
                    required:
                      - success
                      - data
                  - description: error
                    properties:
                      success:
                        type: boolean
                      message:
                        type: string
                      meta:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            type: string
                            enum:
                              - FileIsTooLarge
                              - FileExtensionTypeIsNotAccepted
                              - FileMimeTypeIsNotAccepted
                              - TemplateDataFileNotFound
                              - InvalidTemplateDataFileFormat
                              - InvalidTemplateDataFileMimeType
                              - MissingTemplateDataComposition
                              - MissingTemplateDataInput
                              - WorkspaceNotFound
                              - TemplateNotFound
                              - WorkspaceInconsistency
                              - OrganizationInconsistency
                              - PlanIsInsufficientForGeneration
                              - InsufficientCreditsForGeneration
                              - PlanIsExpired
                              - WorkspaceMustBeSet
                              - BadParameter
                            x-enum-description:
                              FileIsTooLarge: One provided file size is too high
                              FileExtensionTypeIsNotAccepted: 'One provided file extension is not authorized (in general, on the platform)'
                              FileMimeTypeIsNotAccepted: 'One provided file MIME type is not authorized (in general, on the platform)'
                              TemplateDataFileNotFound: 'One provided file ID has been provided but cannot be found in old previous data (e.g. a preloaded-file ID has been provided, but was expired, so that we try to find the ID in old data files, with no success)'
                              InvalidTemplateDataFileFormat: One provided file format is not valid.
                              InvalidTemplateDataFileMimeType: One provided file MIME type does not correspond to its expected type (e.g. if you provide a mp4 when the input should be an image)
                              MissingTemplateDataComposition: 'A required template composition has not been provided in `template_data`, when it should have been'
                              MissingTemplateDataInput: 'A required template input has not been provided in `template_data`, when it should have been'
                              WorkspaceNotFound: The workspace cannot be found
                              TemplateNotFound: The template cannot be found
                              WorkspaceInconsistency: When workspace does not match with template’s one
                              OrganizationInconsistency: When workspace organization does not match with template’s one
                              PlanIsInsufficientForGeneration: The plan is not adapted (e.g. “FREE”)
                              InsufficientCreditsForGeneration: The plan is adapted but no sufficient credits left
                              PlanIsExpired: The plan no longer exists as it did
                              WorkspaceMustBeSet: A workspace ID must be provided
                              BadParameter: One given parameter in the template data cannot be accepted as it is
                    required:
                      - success
                      - message
                      - meta
                type: object
              examples:
                '1:success':
                  value:
                    success: true
                    data:
                      id: 80d4139f-1182-4c5b-bd8e-3a00595e08af
                      short_id: fg56h378k
                      name: Alice's video
                '1:error':
                  value:
                    success: false
                    message: The input "text-3" is required but has not been provided
                    meta:
                      type: MissingTemplateDataInput
      description: 'This endpoint lets you create a video from scratch. You may choose to set it as draft, or directly launch it for generation.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                template_id:
                  type: string
                  description: ID of template from which the video must be generated
                template_data:
                  type: object
                  description: 'Template data for generation (id/value pairs: [see our guide](https://docs.danim.com/api#read-a-template-and-create-a-video)). If there’s no file (URL, ID, bin, etc.) in your data, you can provide a JSON-encoded string.'
                description:
                  default: 'null'
                  type: string
                  description: Description of the video
                name:
                  type: string
                  default: 'Generated (template name + ‘ #’ + short ID)'
                  description: Name of the video
                workspace_id:
                  type: string
                  default: 'Will be the one of the template (if it exists), or the first of its organizations ones otherwise'
                  description: Workspace in which the video should be created
                callback_url:
                  type: string
                  description: |-
                    This webhook URL will be sollicitated on video generation success.
                    It will by default use `POST` method (`Content-Type` being `application/x-www-form-urlencoded`), and provide the following parameters:
                    * `id` (video ID)
                    * `raw_url` (video cloud raw URL)
                    * `raw_thumbnail_url` (video thumbnail cloud raw URL)
                    * `player_url` (link for video play - e.g. iframe).

                    If you prefer to get this stuff done via the `GET` method, just add `+get` in your url scheme (e.g. `https+get://my.app/webhook/1`)
                  default: 'null'
                state:
                  type: string
                  enum:
                    - DRAFT
                    - PENDING_IN_APP
                  default: PENDING_IN_APP
                  description: 'State of video (e.g. DRAFT to create a video that will not be generated once created, and that you may generate afterwards via `/write/video/generate`)'
              required:
                - template_id
                - template_data
            examples:
              '1:Create a video':
                value:
                  template_id: 967702d6-eb8a-4734-a398-4f3c10359d95
                  template_data:
                    text-1: Alice's select value
                    text-2: Alice's text value
                    image-1: www-xxx-yyy-zzz
                  name: Alice's video
                  description: 'Hi everyone, this video has an image! Alice.'
        description: ''
      tags:
        - video
    parameters: []
  /write/video/change:
    post:
      summary: Change a video
      operationId: post-write-video-change
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - description: success
                    properties:
                      success:
                        type: boolean
                      data:
                        type: object
                        properties: {}
                    required:
                      - success
                  - description: error
                    properties:
                      success:
                        type: boolean
                      message:
                        type: string
                      meta:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            type: string
                            enum:
                              - VideoNotFound
                            x-enum-description:
                              VideoNotFound: The video cannot be found
                    required:
                      - success
                      - message
                      - meta
                type: object
              examples:
                '1:success':
                  value:
                    success: true
                    data: {}
                '1:error':
                  value:
                    success: false
                    message: Video with ID 337845a4-7f40-4acd-a662-dfac378126c3 cannot be found.
                    meta:
                      type: VideoNotFound
      tags:
        - video
      description: 'This endpoint lets you change your video: name, description, etc.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                video_id:
                  type: string
                  description: The video ID
                patch:
                  type: object
                  description: This is an object holding all the wished changes
                  properties:
                    name:
                      type: string
                      description: 'Name of the video (title which often appears on snippets, pages, etc.)'
                    description:
                      type: string
                      description: 'Description of the video (used for social sharing, locally on the platform, etc.)'
              required:
                - video_id
                - patch
            examples:
              '1:Edit video name and description':
                value:
                  video_id: 607e5f57-6e4f-4d28-bd81-377bb1a40de1
                  patch:
                    name: Wonderful house
                    description: This video shows the rooms...
        description: ''
    parameters: []
  /write/video/remove:
    parameters: []
    post:
      summary: Remove a video
      operationId: post-write-video-remove
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - description: success
                    properties:
                      success:
                        type: boolean
                      data:
                        type: object
                    required:
                      - success
                  - description: error
                    properties:
                      success:
                        type: boolean
                      message:
                        type: string
                      meta:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            type: string
                            enum:
                              - VideoHasAlreadyBeenRemoved
                              - VideoNotFound
                            x-enum-description:
                              VideoHasAlreadyBeenRemoved: The video has already been removed
                              VideoNotFound: The video cannot be found
                    required:
                      - success
                      - message
                      - meta
                type: object
              examples:
                '1:success':
                  value:
                    success: true
                    data: {}
                '1:error':
                  value:
                    success: false
                    message: Video with ID 337845a4-7f40-4acd-a662-dfac378126c3 cannot be found.
                    meta:
                      type: VideoNotFound
      description: This endpoint lets you remove one of your videos.
      parameters: []
      tags:
        - video
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                video_id:
                  type: string
                  description: The video ID
              required:
                - video_id
            examples:
              '1:Remove':
                value:
                  video_id: 607e5f57-6e4f-4d28-bd81-377bb1a40de1
  /write/video/generate:
    post:
      summary: Generate a video
      tags:
        - video
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - description: success
                    properties:
                      success:
                        type: boolean
                      data:
                        type: object
                        properties: {}
                    required:
                      - success
                  - description: error
                    properties:
                      success:
                        type: boolean
                      message:
                        type: string
                      meta:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            type: string
                            enum:
                              - VideoNotFound
                              - PlanIsInsufficientForGeneration
                              - InsufficientCreditsForGeneration
                              - PlanIsExpired
                            x-enum-description:
                              VideoNotFound: The video cannot be found
                              PlanIsInsufficientForGeneration: The plan is not adapted (e.g. “FREE”)
                              InsufficientCreditsForGeneration: The plan is adapted but no sufficient credits left
                              PlanIsExpired: The plan no longer exists as it did
                    required:
                      - success
                      - message
                      - meta
                type: object
              examples:
                '1:success':
                  value:
                    success: true
                    data: {}
                '1:error':
                  value:
                    success: false
                    message: 'Video cost is 8 credits, 6 ones in the organization is therefore insufficient'
                    meta:
                      type: InsufficientCreditsForGeneration
      operationId: post-write-video-generate
      description: This endpoint lets you launch video generation when this one is still a draft.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                video_id:
                  type: string
                  description: The video ID
              required:
                - video_id
            examples:
              '1:Generate':
                value:
                  video_id: 337845a4-7f40-4acd-a662-dfac378126c3
components:
  schemas: {}
  securitySchemes:
    App ID:
      name: X-App-Id
      type: apiKey
      in: header
    App Secret:
      name: X-App-Secret
      type: apiKey
      in: header
tags:
  - name: upload
  - name: video
security:
  - App ID: []
  - App Secret: []
